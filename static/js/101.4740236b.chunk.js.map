{"version":3,"file":"static/js/101.4740236b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"msg\":\"Notification_msg__jIyxQ\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  const { msg } = css;\n\n  return <p className={msg}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"text\":\"Contact_text__Wq-3f\",\"btnDelete\":\"Contact_btnDelete__9qWfp\"};","import { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/operations';\n// import { deleteContact } from 'redux/contacts/operations';\n\nimport css from './Contact.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>\n        {contact.name}: {contact.phone}\n      </p>\n\n      <button className={css.btnDelete} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n// import { statusFilter } from './constants';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filters.status;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, statusFilter) => {\n    if (!statusFilter) return contacts;\n    return contacts.filter(contact => contact.name.includes(statusFilter));\n  }\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Notification } from 'components/Notification/Notification';\nimport { Contact } from 'components/Contact/Contact';\nimport css from './ContactList.module.css';\n\n// import { selectFilter } from 'redux/selectors';\n// import { selectContacts } from 'redux/selectors';\nimport { selectVisibleContacts } from 'redux/selectors';\n// import { selectFilter } from 'redux/contacts/selectors';\n// import { selectContacts } from 'redux/contacts/selectors';\n// import { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  // const contacts = useSelector(selectContacts);\n  // const filter = useSelector(selectFilter);\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {filteredContacts.length > 0 ? (\n        <ul className={css.list}>\n          {filteredContacts\n            // .filter(contact =>\n            //   contact.name.toLowerCase().includes(filter.toLowerCase())\n            // )\n            .map(contact => {\n              return (\n                <li className={css.item} key={contact.id}>\n                  <Contact contact={contact} />\n                </li>\n              );\n            })}\n        </ul>\n      ) : (\n        <Notification message=\"You don't have this contact.\" />\n      )}\n    </>\n  );\n};\n\nContactList.prototype = {\n  statusFilter: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"btnSubmit\":\"ContactForm_btnSubmit__+7wnS\"};","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n// import { addContact } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\n\nimport { addContact } from 'redux/operations';\n// import { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/selectors';\n// import { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (isMounted.current) {\n      localStorage.setItem('Contacts', JSON.stringify(contacts));\n    } else {\n      isMounted.current = true;\n    }\n  }, [contacts]);\n\n  const formSumbit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.number === number)) {\n      const filterNumber = contacts.filter(\n        contact => contact.number === number\n      )[0].name;\n      alert(`${number} is already in contact with ${filterNumber}`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n  // console.log(contacts);\n  return (\n    <div className={css.container}>\n      <form onSubmit={formSumbit}>\n        <p className={css.title}>Name</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        ></input>\n        <p className={css.title}>Number</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></input>\n        <button className={css.btnSubmit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/filterSlice';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const filterValue = e.target.value;\n    dispatch(setStatusFilter(filterValue));\n  };\n\n  return (\n    <>\n      <p className={css.title}>Find contacts by name</p>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={handleFilterChange}\n      ></input>\n    </>\n  );\n};\n\nFilter.prototype = {\n  filter: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactList from 'components/ContactList/ContactList';\n// import { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { selectLoading } from 'redux/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <h1>Your contacts</h1>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progres...'}</div>\n      <Filter />\n\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Notification","message","msg","css","className","Contact","contact","dispatch","useDispatch","name","phone","type","onClick","deleteContact","id","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectLoading","loading","selectVisibleContacts","filters","status","statusFilter","filter","includes","ContactList","filteredContacts","useSelector","prototype","PropTypes","number","onDeleteContact","ContactForm","isMounted","useRef","useEffect","current","localStorage","setItem","JSON","stringify","onSubmit","event","preventDefault","form","target","newContact","nanoid","some","alert","filterNumber","addContact","reset","pattern","title","required","Filter","onChange","e","filterValue","setStatusFilter","Contacts","isLoading","fetchContacts","Helmet"],"sourceRoot":""}